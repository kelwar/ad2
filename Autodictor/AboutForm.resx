<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAFRgAAAAAGACIBgAAFgAAACgAAAAVAAAAMAAAAAEAGAAAAAAAAAYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg4OCysrLExMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAy8vLkZGRi4uLhYWFrKysAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKWlpWdnZ3JycpycnI6OjnZ2doqKisrKygAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMjIxZWVljY2N3d3eVlZWMjIyDg4N1dXV4eHi3
        t7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtbW1cnJyUlJSW1tbXl5ebW1tjo6Og4ODfHx8fHx8
        dnZ2c3NzmpqaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI+Pj0tLS0dHR01NTVBQUFNTU2NjY4eHh3p6enNz
        c3Nzc3Nzc3JycmhoaHd3dwAAAAAAAAAAAAAAAAAAAAB2dnY/Pz86Ojo/Pz9CQkJHR0dJSUlbW1uAgIB0
        dHRra2tra2tra2tqampqamplZWVtbW0AAAAAAAAAAAAAdnZ2OTk5Nzc3Nzc3ODg4OTk5PT09Pz8/UVFR
        eHh4a2trYmJiYmJiYmJiYmJiYWFhYGBgXV1dZWVlu7u7AAAAAGJiYjs7OzY2Njc3Nzc3Nzc3Nzc3Nzc3
        N0lJSXJycmNjY1lZWVlZWVlZWVlZWVhYWFZWVlRUVGVlZaqqqgAAAABiYmI9PT02NjY2NjY2NjY2NjY2
        NjY2NjZFRUVxcXFgYGBUVFRUVFRUVFRUVFRUVFRUVFRTU1NlZWWqqqoAAAAAY2NjPT09NjY2NjY2NjY2
        NjY2NTU1Nzc3XV1dg4ODd3d3XV1dU1NTVFRUVFRUVFRUVFRUU1NTZWVlqqqqAAAAAGVlZT09PTY2NjY2
        NjY2NjMzM0JCQnNzc5GRkY6Ojo2NjYmJiWdnZ1NTU1RUVFRUVFRUVFNTU2VlZaurqwAAAABoaGg9PT02
        NjY1NTU1NTVcXFyRkZGWlpaMjIyLi4uHh4eMjIyYmJh9fX1YWFhTU1NUVFRTU1NnZ2etra0AAAAAaGho
        PT09MzMzR0dHenp6mJiYi4uLhISEh4eHhoaGg4ODf39/gYGBlpaWj4+PaGhoU1NTU1NTZ2dnrq6uAAAA
        AGhoaDs7O1RUVJCQkJCQkICAgJaWloiIiIGBgYCAgH5+fnt7e3h4eHR0dIeHh5ubm3R0dFRUVGdnZ66u
        rgAAAAAAAABcXFx+fn54eHh6enrDw8P29vbKysqLi4uAgIB+fn6AgIB+fn54eHh2dnZ8fHyLi4twcHBp
        aWmurq4AAAAAAAAAcXFxampqbW1thYWFyMjI1NTUzc3N2dnZxMTEycnJ29vb2traxMTEk5OTeHh4d3d3
        eHh4d3d3tLS0AAAAAAAAAGZmZmtra3t7e4GBgYSEhIyMjMLCwuvr69nZ2cXFxdbW1v39/f///8HBwXl5
        eXh4eHBwcICAgAAAAAAAAAAAAAAAAAB/f395eXmDg4OFhYWGhoaIiIiSkpKJiYmEhISrq6v4+Pj6+vqs
        rKx7e3tzc3OZmZkAAAAAAAAAAAAAAAAAAAAAAAAAn5+ffHx8gYGBiIiIiIiIioqKqKiozMzM7u7u4ODg
        srKyfn5+iIiIu7u7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIWFhX19fYmJiYqKip6ensfHx7Ky
        soyMjHp6eqOjowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZl3d3eHh4eLi4uK
        ioqCgoKDg4O+vr4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiI
        fHx8gYGBoqKiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAJqamry8vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/j/gA/wf4AP4B+AD8APgA8AB4AOAA
        OADAABgAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAADAAAAAwAAAAMAACADgABgA8AA4APwA
        +AD+AfgA/4f4AP/P+AA=
</value>
  </data>
</root>